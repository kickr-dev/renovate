// https://docs.renovatebot.com/configuration-options/

{
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",

    "enabled": true,
    "extends": [
        ":disableRateLimiting",
        ":enableVulnerabilityAlertsWithLabel(vulnerability)",
        ":gitSignOff",
        ":ignoreModulesAndTests",
        ":labels(dependencies, renovate)",
        ":separateMultipleMajorReleases",
        "group:recommended",
        "helpers:pinGitHubActionDigests",
        "mergeConfidence:age-confidence-badges",
        "replacements:all",
        "workarounds:all"
    ],
    "branchPrefix": "renovate/",

    "branchConcurrentLimit": 0,
    "prCreation": "immediate",

    "dependencyDashboard": false,
    "osvVulnerabilityAlerts": false, // https://github.com/renovatebot/renovate/discussions/20542
    "forkProcessing": "disabled",

    "minimumReleaseAge": "5 days",
    "fetchChangeLogs": "pr",

    "semanticCommits": "auto",
    "semanticCommitType": "chore",
    "semanticCommitScope": "deps",

    "baseBranches": [
        "$default",
        "/^v[0-9]+\\.x$/",
        "/^v[0-9]+\\.[0-9]+\\.x$/"
    ],

    "assigneesFromCodeOwners": true,
    "bbUseDefaultReviewers": true,
    "gitLabIgnoreApprovals": true,
    "reviewersFromCodeOwners": true,

    "assignAutomerge": true,
    "automerge": false,
    "automergeStrategy": "fast-forward",
    "automergeType": "pr",
    "platformAutomerge": true,

    "rebaseLabel": "rebase",
    "stopUpdatingLabel": "pause",

    "separateMinorPatch": false,
    "separateMultipleMinor": false,
    "digest": {
        // disable digest only updates, digest are expected to be updated alongside an associated path, minor or major version
        "enabled": false
    },

    "configMigration": false, // removes comments and sets indent to 2 and add a lot of newlines (https://github.com/renovatebot/renovate/issues/16359)

    "postUpdateOptions": [
        "helmUpdateSubChartArchives"
    ],
    "rangeStrategy": "bump",
    "updateLockFiles": true,
    "useBaseBranchConfig": "none",

    "pre-commit": {
        "enabled": true,
        "semanticCommitType": "ci"
    },

    "github-actions": {
        "pinDigests": true
    },
    "gitlabci": {
        "pinDigests": true
    },
    "gitlabci-include": {
        "pinDigests": true
    },

    "packageRules": [
        {
            "matchCategories": [
                "cd",
                "ci",
                "helm",
                "kubernetes",
                "pre-commit",
                "terraform"
            ],
            "semanticCommitType": "ci"
        },
        {
            "matchFileNames": [
                "/(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml.*?$/",
                "/(^|/)action\\.ya?ml.*?$/",

                "/\\.gitlab-ci\\.ya?ml.*?$/"
            ],
            "groupName": "CI/CD dependencies",
            "semanticCommitType": "ci"
        },
        {
            "addLabels": [ "non-major" ],
            "matchUpdateTypes": [ "!major" ]
        },
        {
            "addLabels": [ "major" ],
            "matchUpdateTypes": [ "major" ]
        },
        {
            "enabled": false,
            "matchDepTypes": [ "uses-with" ]
        }
    ],

    "customManagers": [
        {
            "customType": "regex",
            "description": "Update any version in ya?ml files",
            "managerFilePatterns": [
                "/^.*\\.ya?ml.*?$/"
            ],
            "matchStrings": [
                // renovate: datasource=<datasource> packageName=<packageName> (depName=<depName>, i.e. optional) (versioning=<versioning>, i.e. optional)
                // <text>: <currentValue>
                "renovate:\\sdatasource=(?<datasource>\\S+)\\spackageName=(?<packageName>\\S+)(?:\\sdepName=(?<depName>\\S+))?(?:\\sversioning=(?<versioning>\\S+))?\\s*\\S+:\\s{0,1}(?<currentValue>[\\w.+-]+)\\n"
            ]
        }
    ]
}
