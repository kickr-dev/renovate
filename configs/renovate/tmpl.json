// https://docs.renovatebot.com/configuration-options/

{
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",

    "packageRules": [
        {
            "matchFileNames": [
                "/(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml(?:\\.part)?\\.tmpl$/",
                "/(^|/)action\\.ya?ml(?:\\.part)?\\.tmpl$/"
            ],
            "groupName": "GitHub Actions dependencies",
            "groupSlug": "github-actions-dependencies",
            "semanticCommitType": "chore"
        },
        {
            "matchFileNames": [
                "/\\.gitlab-ci\\.ya?ml(?:\\.part)?\\.tmpl$/"
            ],
            "groupName": "GitLab CI/CD dependencies",
            "groupSlug": "gitlabci-dependencies",
            "semanticCommitType": "chore"
        },
        {
            "matchFileNames": [
                "/(^|/)\\.pre-commit-config\\.ya?ml(?:\\.part)?\\.tmpl$/"
            ],
            "groupName": "Pre Commit dependencies",
            "groupSlug": "pre-commit-dependencies",
            "semanticCommitType": "chore"
        },
        {
            "matchManagers": [ "regex" ],
            "matchFileNames": [
                "/(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml$/",
                "/(^|/)action\\.ya?ml$/",

                "/\\.gitlab-ci\\.ya?ml$/",

                "/(^|/)\\.pre-commit-config\\.ya?ml$/"
            ],
            "enabled": false // disable regex manager for tmpl associated files
        }
    ],

    "customManagers": [
        {
            "customType": "regex",
            "datasourceTemplate": "github-tags",
            "description": "Update 'uses' versions in GitHub Actions template files",
            "managerFilePatterns": [
                "/(^|/)(workflow-templates|\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\.ya?ml(?:\\.part)?\\.tmpl$/",
                "/(^|/)action\\.ya?ml(?:\\.part)?\\.tmpl$/"
            ],
            "matchStrings": [
                // uses: <packageName>@<currentDigest> # <currentValue>
                "uses:\\s*(?<packageName>[^@\\s'\"]+)@(?<currentDigest>[\\w.+-]+)\\s#\\s(?<currentValue>[\\w.+-]+)\\n",

                // uses: <packageName>@<currentValue>
                "uses:\\s*(?<packageName>[^@\\s'\"]+)@(?<currentValue>[\\w.+-]+)\\n"
            ]
        },
        {
            "customType": "regex",
            "datasourceTemplate": "gitlab-tags",
            "description": "Update 'ref' versions in GitLab CI/CD template files",
            "managerFilePatterns": [
                "/\\.gitlab-ci\\.ya?ml(?:\\.part)?\\.tmpl$/"
            ],
            "matchStrings": [
                // project: <packageName>
                // ref: <currentDigest> # <currentValue>
                "project:\\s*(?<packageName>\\S+)\\s*ref:\\s*(?<currentDigest>[\\w.+-]+)\\s#\\s(?<currentValue>[\\w.+-]+)\\n",

                // project: <packageName>
                // ref: <currentValue> (quotes may or may not be there)
                "project:\\s*(?<packageName>\\S+)\\s*ref:\\s*['\"]?(?<currentValue>[\\w.+-]+)['\"]?\\n"
            ]
        },
        {
            "customType": "regex",
            "description": "Update 'rev' versions in pre-commit template files",
            "managerFilePatterns": [
                "/(^|/)\\.pre-commit-config\\.ya?ml(?:\\.part)?\\.tmpl$/"
            ],
            "matchStrings": [
                // renovate: datasource=<datasource> packageName=<packageName> (depName=<depName>, i.e. optional)
                // rev: <the version>
                "renovate:\\sdatasource=(?<datasource>\\S+)\\spackageName=(?<packageName>\\S+)(?:\\sdepName=(?<depName>\\S+))?\\s*rev:\\s{0,1}(?<currentValue>[\\w.+-]+)\\n"
            ]
        }
    ]
}
